apply plugin: 'kotlin'

apply plugin: 'com.jfrog.bintray'

apply plugin: 'maven-publish'

apply plugin: 'org.jetbrains.dokka'

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.truth:truth:1.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    getArchiveClassifier().set('sources')
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    reportUndocumented = true
}

task dokkaJar(type: Jar) {
    from dokka as Object
    getArchiveClassifier().set('javadoc')
}

publishing {
    publications {
        ConstraintsPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact dokkaJar
            groupId project.getGroup()
            artifactId project.getName()
            version getGitVersionName()
            pom {
                name = 'Constraints'
                description = 'A constraints satisfaction library for Kotlin.'
                url = 'https://github.com/alexbaryzhikov/kotlin-constraints'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'alexb'
                        name = 'Alex Baryzhikov'
                        email = 'aleksiarts@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/alexbaryzhikov/kotlin-constraints'
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_APIKEY')
    publications = ['ConstraintsPublication']
    pkg {
        repo = 'kotlin-constraints'
        name = 'constraints'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/alexbaryzhikov/kotlin-constraints'
        version {
            name = getGitVersionName()
        }
    }
}

def getGitTagDescription() {
    def stdout = new ByteArrayOutputStream()
    exec {
        workingDir '..'
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitVersionName() {
    def versionArray = getGitTagDescription().split('-')
    if (versionArray.length > 1) {
        return versionArray[0] + '.' + versionArray[1]
    } else {
        return versionArray[0] + '.0'
    }
}
